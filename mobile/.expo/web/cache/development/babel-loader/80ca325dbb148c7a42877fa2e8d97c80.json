{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { getViewGET, getViewPOST } from \"../../api/getView\";\nimport useInertia from \"../../hooks/useInertia\";\nexport default function LoginForm() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dataProps = _useState4[0],\n      setDataProps = _useState4[1];\n\n  var _useInertia = useInertia(),\n      iProps = _useInertia.iProps,\n      setValues = _useInertia.setValues;\n\n  useEffect(function () {\n    (function _callee() {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setDataProps(iProps);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(getViewGET(\"login\"));\n\n            case 3:\n              response = _context.sent;\n              setValues(response.data);\n              setDataProps(response.data.props);\n              console.log(dataProps);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  var formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    validateOnChange: false,\n    onSubmit: function onSubmit(values) {\n      setError(\"\");\n      var username = values.username,\n          password = values.password;\n      var data = {\n        \"username\": username,\n        \"password\": password\n      };\n      getViewPOST(\"login\", data, dataProps.auth.csrftoken).then(function (response) {\n        setValues(response.data);\n      }).catch(function (error) {\n        console.log(error);\n        setError(\"Error in Login\");\n      });\n    }\n  });\n  return React.createElement(View, {\n    style: styles.content\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Sign In\"), React.createElement(TextInput, {\n    placeholder: \"Username\",\n    style: styles.input,\n    autoCapitalize: \"none\",\n    value: formik.values.username,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue('username', text);\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Password\",\n    style: styles.input,\n    autoCapitalize: \"none\",\n    secureTextEntry: true,\n    value: formik.values.password,\n    onChangeText: function onChangeText(text) {\n      return formik.setFieldValue('password', text);\n    }\n  }), React.createElement(Button, {\n    title: \"Sign In\",\n    onPress: formik.handleSubmit\n  }), React.createElement(Text, {\n    style: styles.error\n  }, formik.errors.username), React.createElement(Text, {\n    style: styles.error\n  }, formik.errors.password), React.createElement(Text, {\n    style: styles.error\n  }, error));\n}\n\nfunction initialValues() {\n  return {\n    username: \"\",\n    password: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    username: Yup.string().required(\"Username required\"),\n    password: Yup.string().required(\"Password required\")\n  };\n}\n\nvar styles = StyleSheet.create({\n  title: {\n    textAlign: \"center\",\n    fontSize: 28,\n    fontWeight: \"bold\",\n    marginTop: 50,\n    marginBottom: 15\n  },\n  input: {\n    height: 40,\n    marginVertical: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 10\n  },\n  error: {\n    textAlign: \"center\",\n    color: \"#f00\"\n  },\n  content: {\n    paddingHorizontal: 20\n  }\n});","map":{"version":3,"sources":["/home/wilfred/Pruebas/django-inertiajs/mobile/components/Auth/LoginForm.js"],"names":["React","useState","useEffect","useFormik","Yup","getViewGET","getViewPOST","useInertia","LoginForm","error","setError","dataProps","setDataProps","iProps","setValues","response","data","props","console","log","formik","initialValues","validationSchema","object","validateOnChange","onSubmit","values","username","password","auth","csrftoken","then","catch","styles","content","title","input","text","setFieldValue","handleSubmit","errors","string","required","StyleSheet","create","textAlign","fontSize","fontWeight","marginTop","marginBottom","height","marginVertical","borderWidth","padding","borderRadius","color","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { View, Text, StyleSheet, TextInput, Button, Keyboard } from 'react-native'\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { getViewGET, getViewPOST } from '../../api/getView';\nimport useInertia from '../../hooks/useInertia';\n\nexport default function LoginForm() {\n    const [error, setError] = useState(\"\");\n    const [dataProps, setDataProps] = useState(\"\");\n    const { iProps, setValues } = useInertia();\n\n    useEffect(() => {\n        (async() =>{\n            setDataProps(iProps)\n            const response = await getViewGET(\"login\");\n            setValues(response.data);\n            setDataProps(response.data.props)\n            console.log(dataProps)\n        })()\n    },[])\n\n    const formik = useFormik({\n        initialValues: initialValues(),\n        validationSchema: Yup.object(validationSchema()),\n        validateOnChange: false,\n        onSubmit: (values) => {\n            setError(\"\")\n            const { username, password } = values;\n            const data = {\n                \"username\" : username,\n                \"password\": password\n            }\n            getViewPOST(\"login\", data, dataProps.auth.csrftoken)\n            .then(\n                (response) => { \n                    setValues(response.data);\n                }\n            )\n            .catch((error) => {\n                console.log(error)\n                setError(\"Error in Login\");\n            })\n        }\n    })\n\n    return (\n        <View style={styles.content}>\n            <Text style={styles.title}>Sign In</Text>\n            <TextInput\n                placeholder=\"Username\"\n                style={styles.input}\n                autoCapitalize=\"none\"\n                value={formik.values.username}\n                onChangeText={(text) => formik.setFieldValue('username', text)}\n            />\n\n            <TextInput\n                placeholder=\"Password\"\n                style={styles.input}\n                autoCapitalize=\"none\"\n                secureTextEntry={true}\n                value={formik.values.password}\n                onChangeText={(text) => formik.setFieldValue('password', text)}\n            />\n            \n            <Button\n                title=\"Sign In\"\n                onPress={formik.handleSubmit}\n            />\n            <Text style={styles.error} >{formik.errors.username}</Text>\n            <Text style={styles.error} >{formik.errors.password}</Text>\n            <Text style={styles.error} >{error}</Text>\n        </View>\n    )\n}\n\nfunction initialValues () {\n    return {\n        username: \"\",\n        password: \"\"\n    }\n}\n\nfunction validationSchema() {\n    return {\n        username: Yup.string().required(\"Username required\"),\n        password: Yup.string().required(\"Password required\")\n    }\n}\n\nconst styles = StyleSheet.create({\n    title:{\n        textAlign: \"center\",\n        fontSize: 28,\n        fontWeight: \"bold\",\n        marginTop: 50,\n        marginBottom: 15\n    },\n    input: {\n        height: 40,\n        marginVertical: 12,\n        borderWidth: 1,\n        padding: 10,\n        borderRadius: 10\n    },\n    error: {\n        textAlign: \"center\",\n        color: \"#f00\",\n    },\n    content: {\n        paddingHorizontal: 20,\n    },\n})"]},"metadata":{},"sourceType":"module"}